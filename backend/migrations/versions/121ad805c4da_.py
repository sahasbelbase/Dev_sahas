"""empty message

Revision ID: 121ad805c4da
Revises: 
Create Date: 2024-01-25 18:35:32.421778

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '121ad805c4da'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addressType',
    sa.Column('addressTypeId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=200), nullable=False),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('addressTypeId')
    )
    op.create_table('contactType',
    sa.Column('contactTypeId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=200), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('contactTypeId')
    )
    op.create_table('roomType',
    sa.Column('roomTypeId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('roomType', sa.String(length=200), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('roomTypeId')
    )
    op.create_table('serviceType',
    sa.Column('serviceTypeId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('serviceTypeId')
    )
    op.create_table('contactInformation',
    sa.Column('contactInformationId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contactTypeId', sa.Integer(), nullable=False),
    sa.Column('contact', sa.String(length=200), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contactTypeId'], ['contactType.contactTypeId'], ),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('contactInformationId')
    )
    op.create_table('branchAddress',
    sa.Column('branchAddressId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('branchId', sa.Integer(), nullable=False),
    sa.Column('addressId', sa.Integer(), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['addressId'], ['address.addressId'], ),
    sa.ForeignKeyConstraint(['branchId'], ['branch.branchId'], ),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('branchAddressId')
    )
    op.create_table('branchContact',
    sa.Column('branchContactId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('branchId', sa.Integer(), nullable=False),
    sa.Column('contactInformationId', sa.Integer(), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['branchId'], ['branch.branchId'], ),
    sa.ForeignKeyConstraint(['contactInformationId'], ['contactInformation.contactInformationId'], ),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('branchContactId')
    )
    op.create_table('hotelAddress',
    sa.Column('hotelAddressId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hotelId', sa.Integer(), nullable=False),
    sa.Column('addressId', sa.Integer(), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['addressId'], ['address.addressId'], ),
    sa.ForeignKeyConstraint(['hotelId'], ['hotel.hotelId'], ),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('hotelAddressId')
    )
    op.create_table('hotelContact',
    sa.Column('hotelContactId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hotelId', sa.Integer(), nullable=False),
    sa.Column('contactInformationId', sa.Integer(), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contactInformationId'], ['contactInformation.contactInformationId'], ),
    sa.ForeignKeyConstraint(['hotelId'], ['hotel.hotelId'], ),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('hotelContactId')
    )
    op.create_table('personAddress',
    sa.Column('personAddressId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('personId', sa.Integer(), nullable=False),
    sa.Column('addressId', sa.Integer(), nullable=False),
    sa.Column('userPersonID', sa.Integer(), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.ForeignKeyConstraint(['addressId'], ['address.addressId'], ),
    sa.ForeignKeyConstraint(['personId'], ['person.personId'], ),
    sa.ForeignKeyConstraint(['userPersonID'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('personAddressId')
    )
    op.create_table('personContact',
    sa.Column('personContactId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('personId', sa.Integer(), nullable=False),
    sa.Column('contactInformationId', sa.Integer(), nullable=False),
    sa.Column('insertDate', sa.SmallInteger(), nullable=True),
    sa.Column('userPersonId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contactInformationId'], ['contactInformation.contactInformationId'], ),
    sa.ForeignKeyConstraint(['personId'], ['person.personId'], ),
    sa.ForeignKeyConstraint(['userPersonId'], ['person.personId'], ),
    sa.PrimaryKeyConstraint('personContactId')
    )
    op.drop_table('hotelcontact')
    op.drop_table('servicetype')
    op.drop_table('addresstype')
    op.drop_table('branchcontact')
    op.drop_table('personaddress')
    op.drop_table('hoteladdress')
    op.drop_table('roomtype')
    op.drop_table('contactinformation')
    op.drop_table('personcontact')
    op.drop_table('branchaddress')
    op.drop_table('contacttype')
    with op.batch_alter_table('address', schema=None) as batch_op:
        batch_op.add_column(sa.Column('addressId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('addressTypeId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('country', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('city', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('streetName', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkAddressUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkAddressAddressTypeID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'addressType', ['addressTypeId'], ['addressTypeId'])
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('AddressTypeId')
        batch_op.drop_column('StreetName')
        batch_op.drop_column('AddressId')
        batch_op.drop_column('City')
        batch_op.drop_column('Country')

    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bookingId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('roomId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('customerId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('checkInDate', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('checkOutDate', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('insertDate', sa.SmallInteger(), nullable=True))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkBookingUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkBookingCustomerID', type_='foreignkey')
        batch_op.drop_constraint('FkBookingRoomID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'room', ['roomId'], ['roomId'])
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.create_foreign_key(None, 'customer', ['customerId'], ['personId'])
        batch_op.drop_column('RoomId')
        batch_op.drop_column('BookingId')
        batch_op.drop_column('InsertDate')
        batch_op.drop_column('CheckOutDate')
        batch_op.drop_column('CustomerId')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('CheckInDate')

    with op.batch_alter_table('branch', schema=None) as batch_op:
        batch_op.add_column(sa.Column('branchId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('hotelId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('name', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkBranchHotelID', type_='foreignkey')
        batch_op.drop_constraint('FkBranchPersonID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.create_foreign_key(None, 'hotel', ['hotelId'], ['hotelId'])
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('BranchId')
        batch_op.drop_column('HotelId')
        batch_op.drop_column('Name')

    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('customerId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('personId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('branchId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('insertDate', sa.SmallInteger(), nullable=True))
        batch_op.drop_constraint('FkCustomerPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkCustomerUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkCustomerBranchID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.create_foreign_key(None, 'branch', ['branchId'], ['branchId'])
        batch_op.create_foreign_key(None, 'person', ['personId'], ['personId'])
        batch_op.drop_column('BranchId')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('InsertDate')
        batch_op.drop_column('PersonId')

    with op.batch_alter_table('facility', schema=None) as batch_op:
        batch_op.add_column(sa.Column('facilityId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('branchID', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('name', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('insertDate', sa.SmallInteger(), nullable=True))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkFacilityUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkFacilityServiceTypeID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.create_foreign_key(None, 'branch', ['branchID'], ['branchId'])
        batch_op.drop_column('InsertDate')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('BranchID')
        batch_op.drop_column('FacilityId')
        batch_op.drop_column('Name')
        batch_op.drop_column('Price')

    with op.batch_alter_table('food', schema=None) as batch_op:
        batch_op.add_column(sa.Column('foodId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('branchID', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('name', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('insertDate', sa.SmallInteger(), nullable=True))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkFoodUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkFoodServiceTypeID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.create_foreign_key(None, 'branch', ['branchID'], ['branchId'])
        batch_op.drop_column('InsertDate')
        batch_op.drop_column('FoodId')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('BranchID')
        batch_op.drop_column('Name')
        batch_op.drop_column('Price')

    with op.batch_alter_table('hotel', schema=None) as batch_op:
        batch_op.add_column(sa.Column('hotelId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('name', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('pan', sa.String(length=10), nullable=False))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=True))
        batch_op.drop_index('PAN')
        batch_op.create_unique_constraint(None, ['pan'])
        batch_op.drop_constraint('FkHotelPersonID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.drop_column('PAN')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('HotelId')
        batch_op.drop_column('Name')

    with op.batch_alter_table('invoice', schema=None) as batch_op:
        batch_op.add_column(sa.Column('invoiceId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('customerId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('dueDate', sa.SmallInteger(), nullable=False))
        batch_op.add_column(sa.Column('billAmount', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('balance', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkInvoiceUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkInvoiceCustomerID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.create_foreign_key(None, 'customer', ['customerId'], ['personId'])
        batch_op.drop_column('Balance')
        batch_op.drop_column('InsertDate')
        batch_op.drop_column('DueDate')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('CustomerId')
        batch_op.drop_column('BillAmount')
        batch_op.drop_column('InvoiceId')

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('paymentId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('amount', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('invoiceID', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('insertDate', sa.SmallInteger(), nullable=True))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkPaymentInvoiceID', type_='foreignkey')
        batch_op.drop_constraint('FkPaymentUserPersonID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'invoice', ['invoiceID'], ['invoiceId'])
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.drop_column('Amount')
        batch_op.drop_column('InvoiceID')
        batch_op.drop_column('InsertDate')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('PaymentId')

    with op.batch_alter_table('person', schema=None) as batch_op:
        batch_op.add_column(sa.Column('personId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('fullName', sa.String(length=200), nullable=False))
        batch_op.add_column(sa.Column('ssn', sa.String(length=11), nullable=False))
        batch_op.add_column(sa.Column('title', sa.String(length=200), nullable=False))
        batch_op.drop_column('Title')
        batch_op.drop_column('FullName')
        batch_op.drop_column('SSN')
        batch_op.drop_column('PersonId')

    with op.batch_alter_table('room', schema=None) as batch_op:
        batch_op.add_column(sa.Column('roomId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('roomTypeID', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('branchId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('roomNumber', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('insertDate', sa.SmallInteger(), nullable=True))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkRoomUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkRoomRoomTypeID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.create_foreign_key(None, 'branch', ['branchId'], ['branchId'])
        batch_op.create_foreign_key(None, 'roomType', ['roomTypeID'], ['roomTypeId'])
        batch_op.drop_column('RoomId')
        batch_op.drop_column('RoomTypeID')
        batch_op.drop_column('BranchId')
        batch_op.drop_column('RoomNumber')
        batch_op.drop_column('InsertDate')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('Price')

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('transactionId', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('roomId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('customerId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('serviceTypeID', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('serviceID', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('quantity', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('invoiceID', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('insertDate', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('userPersonId', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkTransactionCustomerID', type_='foreignkey')
        batch_op.drop_constraint('FkTransactionUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkTransactionRoomID', type_='foreignkey')
        batch_op.drop_constraint('FkTransactionInvoiceID', type_='foreignkey')
        batch_op.drop_constraint('FkTransactionServiceTypeID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'serviceType', ['serviceTypeID'], ['serviceTypeId'])
        batch_op.create_foreign_key(None, 'person', ['userPersonId'], ['personId'])
        batch_op.create_foreign_key(None, 'invoice', ['invoiceID'], ['invoiceId'])
        batch_op.create_foreign_key(None, 'customer', ['customerId'], ['personId'])
        batch_op.create_foreign_key(None, 'room', ['roomId'], ['roomId'])
        batch_op.drop_column('RoomId')
        batch_op.drop_column('Amount')
        batch_op.drop_column('ServiceTypeID')
        batch_op.drop_column('InvoiceID')
        batch_op.drop_column('Quantity')
        batch_op.drop_column('InsertDate')
        batch_op.drop_column('CustomerId')
        batch_op.drop_column('UserPersonId')
        batch_op.drop_column('ServiceID')
        batch_op.drop_column('TransactionId')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('userId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('personId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('branchId', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('username', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('password', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('userPersonID', sa.Integer(), nullable=False))
        batch_op.drop_constraint('FkUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkUserUserPersonID', type_='foreignkey')
        batch_op.drop_constraint('FkUserBranchID', type_='foreignkey')
        batch_op.create_foreign_key(None, 'branch', ['branchId'], ['branchId'])
        batch_op.create_foreign_key(None, 'person', ['userPersonID'], ['personId'])
        batch_op.create_foreign_key(None, 'person', ['personId'], ['personId'])
        batch_op.drop_column('UserPersonID')
        batch_op.drop_column('BranchId')
        batch_op.drop_column('UserId')
        batch_op.drop_column('Password')
        batch_op.drop_column('Username')
        batch_op.drop_column('PersonId')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('PersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('Username', mysql.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('Password', mysql.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('UserId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('BranchId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('UserPersonID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkUserBranchID', 'branch', ['BranchId'], ['BranchId'])
        batch_op.create_foreign_key('FkUserUserPersonID', 'person', ['UserPersonID'], ['PersonId'])
        batch_op.create_foreign_key('FkUserPersonID', 'person', ['PersonId'], ['PersonId'])
        batch_op.drop_column('userPersonID')
        batch_op.drop_column('password')
        batch_op.drop_column('username')
        batch_op.drop_column('branchId')
        batch_op.drop_column('personId')
        batch_op.drop_column('userId')

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('TransactionId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('ServiceID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('CustomerId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False))
        batch_op.add_column(sa.Column('Quantity', mysql.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('InvoiceID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ServiceTypeID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('Amount', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('RoomId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkTransactionServiceTypeID', 'servicetype', ['ServiceTypeID'], ['ServiceTypeId'])
        batch_op.create_foreign_key('FkTransactionInvoiceID', 'invoice', ['InvoiceID'], ['InvoiceId'])
        batch_op.create_foreign_key('FkTransactionRoomID', 'room', ['RoomId'], ['RoomId'])
        batch_op.create_foreign_key('FkTransactionUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.create_foreign_key('FkTransactionCustomerID', 'customer', ['CustomerId'], ['PersonId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('insertDate')
        batch_op.drop_column('invoiceID')
        batch_op.drop_column('amount')
        batch_op.drop_column('quantity')
        batch_op.drop_column('serviceID')
        batch_op.drop_column('serviceTypeID')
        batch_op.drop_column('customerId')
        batch_op.drop_column('roomId')
        batch_op.drop_column('transactionId')

    with op.batch_alter_table('room', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Price', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False))
        batch_op.add_column(sa.Column('RoomNumber', mysql.VARCHAR(length=50), nullable=False))
        batch_op.add_column(sa.Column('BranchId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('RoomTypeID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('RoomId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkRoomRoomTypeID', 'roomtype', ['RoomTypeID'], ['RoomTypeId'])
        batch_op.create_foreign_key('FkRoomUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('insertDate')
        batch_op.drop_column('price')
        batch_op.drop_column('roomNumber')
        batch_op.drop_column('branchId')
        batch_op.drop_column('roomTypeID')
        batch_op.drop_column('roomId')

    with op.batch_alter_table('person', schema=None) as batch_op:
        batch_op.add_column(sa.Column('PersonId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('SSN', mysql.VARCHAR(length=11), nullable=False))
        batch_op.add_column(sa.Column('FullName', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('Title', mysql.VARCHAR(length=200), nullable=False))
        batch_op.drop_column('title')
        batch_op.drop_column('ssn')
        batch_op.drop_column('fullName')
        batch_op.drop_column('personId')

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('PaymentId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False))
        batch_op.add_column(sa.Column('InvoiceID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('Amount', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkPaymentUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.create_foreign_key('FkPaymentInvoiceID', 'invoice', ['InvoiceID'], ['InvoiceId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('insertDate')
        batch_op.drop_column('invoiceID')
        batch_op.drop_column('amount')
        batch_op.drop_column('paymentId')

    with op.batch_alter_table('invoice', schema=None) as batch_op:
        batch_op.add_column(sa.Column('InvoiceId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('BillAmount', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('CustomerId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('DueDate', mysql.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False))
        batch_op.add_column(sa.Column('Balance', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkInvoiceCustomerID', 'customer', ['CustomerId'], ['PersonId'])
        batch_op.create_foreign_key('FkInvoiceUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('balance')
        batch_op.drop_column('billAmount')
        batch_op.drop_column('dueDate')
        batch_op.drop_column('customerId')
        batch_op.drop_column('invoiceId')

    with op.batch_alter_table('hotel', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Name', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('HotelId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('PAN', mysql.VARCHAR(length=10), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkHotelPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('PAN', ['PAN'], unique=True)
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('pan')
        batch_op.drop_column('name')
        batch_op.drop_column('hotelId')

    with op.batch_alter_table('food', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Price', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('Name', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('BranchID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('FoodId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkFoodServiceTypeID', 'branch', ['BranchID'], ['BranchId'])
        batch_op.create_foreign_key('FkFoodUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('insertDate')
        batch_op.drop_column('price')
        batch_op.drop_column('name')
        batch_op.drop_column('branchID')
        batch_op.drop_column('foodId')

    with op.batch_alter_table('facility', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Price', mysql.DECIMAL(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('Name', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('FacilityId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('BranchID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkFacilityServiceTypeID', 'branch', ['BranchID'], ['BranchId'])
        batch_op.create_foreign_key('FkFacilityUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('insertDate')
        batch_op.drop_column('price')
        batch_op.drop_column('name')
        batch_op.drop_column('branchID')
        batch_op.drop_column('facilityId')

    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('PersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=True))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('BranchId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkCustomerBranchID', 'branch', ['BranchId'], ['BranchId'])
        batch_op.create_foreign_key('FkCustomerUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.create_foreign_key('FkCustomerPersonID', 'person', ['PersonId'], ['PersonId'])
        batch_op.drop_column('insertDate')
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('branchId')
        batch_op.drop_column('personId')
        batch_op.drop_column('customerId')

    with op.batch_alter_table('branch', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Name', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('HotelId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('BranchId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkBranchPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.create_foreign_key('FkBranchHotelID', 'hotel', ['HotelId'], ['HotelId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('name')
        batch_op.drop_column('hotelId')
        batch_op.drop_column('branchId')

    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.add_column(sa.Column('CheckInDate', sa.DATE(), nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('CustomerId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('CheckOutDate', sa.DATE(), nullable=False))
        batch_op.add_column(sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False))
        batch_op.add_column(sa.Column('BookingId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('RoomId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkBookingRoomID', 'room', ['RoomId'], ['RoomId'])
        batch_op.create_foreign_key('FkBookingCustomerID', 'customer', ['CustomerId'], ['PersonId'])
        batch_op.create_foreign_key('FkBookingUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('insertDate')
        batch_op.drop_column('checkOutDate')
        batch_op.drop_column('checkInDate')
        batch_op.drop_column('customerId')
        batch_op.drop_column('roomId')
        batch_op.drop_column('bookingId')

    with op.batch_alter_table('address', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Country', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('City', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('AddressId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('StreetName', mysql.VARCHAR(length=200), nullable=False))
        batch_op.add_column(sa.Column('AddressTypeId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('FkAddressAddressTypeID', 'addresstype', ['AddressTypeId'], ['AddressTypeId'])
        batch_op.create_foreign_key('FkAddressUserPersonID', 'person', ['UserPersonId'], ['PersonId'])
        batch_op.drop_column('userPersonId')
        batch_op.drop_column('streetName')
        batch_op.drop_column('city')
        batch_op.drop_column('country')
        batch_op.drop_column('addressTypeId')
        batch_op.drop_column('addressId')

    op.create_table('contacttype',
    sa.Column('ContactTypeId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('Type', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkContactTypeUserPersonID'),
    sa.PrimaryKeyConstraint('ContactTypeId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('branchaddress',
    sa.Column('BranchAddressId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('BranchId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('AddressId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['AddressId'], ['address.AddressId'], name='FkBranchAddressAddressID'),
    sa.ForeignKeyConstraint(['BranchId'], ['branch.BranchId'], name='FkBranchAddressBranchID'),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkBranchAddressUserPersonID'),
    sa.PrimaryKeyConstraint('BranchAddressId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('personcontact',
    sa.Column('PersonContactId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('PersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('ContactInformationId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ContactInformationId'], ['contactinformation.ContactInformationId'], name='FkPersonContactContactInformationID'),
    sa.ForeignKeyConstraint(['PersonId'], ['person.PersonId'], name='FkPersonContactPersonID'),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkPersonContactUserPersonID'),
    sa.PrimaryKeyConstraint('PersonContactId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('contactinformation',
    sa.Column('ContactInformationId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('ContactTypeId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('Contact', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ContactTypeId'], ['contacttype.ContactTypeId'], name='FkContactInformationContactTypeID'),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkContactInformationUserPersonID'),
    sa.PrimaryKeyConstraint('ContactInformationId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('roomtype',
    sa.Column('RoomTypeId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('RoomType', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkRoomTypeUserPersonID'),
    sa.PrimaryKeyConstraint('RoomTypeId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('hoteladdress',
    sa.Column('HotelAddressId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('HotelId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('AddressId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['AddressId'], ['address.AddressId'], name='FkHotelAddressAddressID'),
    sa.ForeignKeyConstraint(['HotelId'], ['hotel.HotelId'], name='FkHotelAddressHotelID'),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkHotelAddressUserPersonID'),
    sa.PrimaryKeyConstraint('HotelAddressId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('personaddress',
    sa.Column('PersonAddressId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('PersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('AddressId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('UserPersonID', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=True),
    sa.ForeignKeyConstraint(['AddressId'], ['address.AddressId'], name='FkPersonAddressID'),
    sa.ForeignKeyConstraint(['PersonId'], ['person.PersonId'], name='FkPersonAddressPersonID'),
    sa.ForeignKeyConstraint(['UserPersonID'], ['person.PersonId'], name='FkPersonAddressUserPersonID'),
    sa.PrimaryKeyConstraint('PersonAddressId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('branchcontact',
    sa.Column('BranchContactId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('BranchId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('ContactInformationId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['BranchId'], ['branch.BranchId'], name='FkBranchContactBranchID'),
    sa.ForeignKeyConstraint(['ContactInformationId'], ['contactinformation.ContactInformationId'], name='FkBranchContactContactInformationID'),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkBranchContactUserPersonID'),
    sa.PrimaryKeyConstraint('BranchContactId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('addresstype',
    sa.Column('AddressTypeId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('Type', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkAddressTypeUserPersonID'),
    sa.PrimaryKeyConstraint('AddressTypeId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('servicetype',
    sa.Column('ServiceTypeId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('Name', mysql.VARCHAR(length=200), nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkServiceTypeUserPersonID'),
    sa.PrimaryKeyConstraint('ServiceTypeId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('hotelcontact',
    sa.Column('HotelContactId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('HotelId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('ContactInformationId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('InsertDate', mysql.DATETIME(), server_default=sa.text('current_timestamp()'), nullable=False),
    sa.Column('UserPersonId', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ContactInformationId'], ['contactinformation.ContactInformationId'], name='FkHotelContactContactInformationID'),
    sa.ForeignKeyConstraint(['HotelId'], ['hotel.HotelId'], name='FkHotelContactHotelID'),
    sa.ForeignKeyConstraint(['UserPersonId'], ['person.PersonId'], name='FkHotelContactUserPersonID'),
    sa.PrimaryKeyConstraint('HotelContactId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('personContact')
    op.drop_table('personAddress')
    op.drop_table('hotelContact')
    op.drop_table('hotelAddress')
    op.drop_table('branchContact')
    op.drop_table('branchAddress')
    op.drop_table('contactInformation')
    op.drop_table('serviceType')
    op.drop_table('roomType')
    op.drop_table('contactType')
    op.drop_table('addressType')
    # ### end Alembic commands ###
